---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { Icon } from "astro-icon/components";
import { formatDate } from "../../lib/utils";

interface Props {
	post: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
	const blogPosts = await getCollection("blog");
	return blogPosts.map((post: CollectionEntry<"blog">) => ({
		params: { slug: post.slug },
		props: { post },
	}));
}

const { post } = Astro.props;
const { Content, headings } = await post.render();
---

<script>
	document.querySelectorAll<HTMLAnchorElement>('a[href^="#"]').forEach((anchor) => {
		anchor.addEventListener("click", function (e: MouseEvent) {
			e.preventDefault();

			const targetId = (anchor.getAttribute("href") as string) ?? "";
			const targetElement = document.querySelector(targetId) as HTMLElement | null;

			if (!targetElement) return;

			const headerOffset = document.getElementById("header")?.offsetHeight ?? 64;
			const elementPosition = targetElement.getBoundingClientRect().top + window.scrollY;
			const offsetPosition = elementPosition - headerOffset;

			window.scrollTo({
				top: offsetPosition,
				behavior: "smooth",
			});
		});
	});
</script>

<Layout title={post.data.title} description={post.data.description} tags={post.data.tags}>
	<div id="blog-header" class="flex items-center gap-4 mb-4 w-full">
		<a class="w-fit rounded-full bg-accent-contrast p-2 ring-1 ring-muted" aria-label="Back" href="/">
			<Icon size="16" name="mdi:arrow-left" />
		</a>
		<span class="text-muted">|</span>
		<p>{formatDate(post.data.date, { month: "long", year: "numeric" })}</p>
	</div>

	<div class="grid grid-cols-1 md:grid-cols-4 gap-4">
		<div id="divider" class="w-full border-t border-border md:hidden mt-12 mb-8"></div>

		<article id="blog-body" class="grid col-span-1 md:col-span-3 prose dark:prose-invert mb-2 hide-scrollbar">
			<h1 class="text-4xl font-bold mb-2">{post.data.title}</h1>
			<p class="lead">{post.data.description}</p>
			<Content />
		</article>

		<div id="blog-index" class="grid order-first md:order-last col-span-1 text-sm border-border md:border-l h-fit sticky">
			<div class="flex flex-col gap-4 min-w-0 my-2 mx-4">
				<h2 class="text-muted">Contents</h2>
				<div class="flex flex-col gap-2 text-red-300">
					{
						headings.map((heading) => (
							<a
								href={`#${heading.slug}`}
								style={`margin-left: ${(heading.depth - 1) * 10}px`}
								class="text-text hover:text-primary text-ellipsis truncate">
								{heading.text}
							</a>
						))
					}
				</div>
			</div>
		</div>
	</div>
</Layout>
